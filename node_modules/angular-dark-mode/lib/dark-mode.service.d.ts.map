{"version":3,"file":"dark-mode.service.d.ts","sources":["dark-mode.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { RendererFactory2 } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MediaQueryService } from './media-query.service';\nimport { DarkModeOptions } from './types';\nexport declare class DarkModeService {\n    private rendererFactory;\n    private mediaQueryService;\n    private providedOptions;\n    private readonly options;\n    private readonly renderer;\n    private readonly darkModeSubject$;\n    constructor(rendererFactory: RendererFactory2, mediaQueryService: MediaQueryService, providedOptions: DarkModeOptions | null);\n    /**\n     * An Observable representing current dark mode.\n     * Only fires the initial and distinct values.\n     */\n    get darkMode$(): Observable<boolean>;\n    toggle(): void;\n    enable(): void;\n    disable(): void;\n    private getInitialDarkModeValue;\n    private saveDarkModeToStorage;\n    private getDarkModeFromStorage;\n    private removePreloadingClass;\n}\n"]}