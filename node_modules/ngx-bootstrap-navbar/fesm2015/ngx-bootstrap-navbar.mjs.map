{"version":3,"file":"ngx-bootstrap-navbar.mjs","sources":["../../../projects/ngx-bootstrap-navbar/src/lib/navbar-dynamic-collapse.directive.ts","../../../projects/ngx-bootstrap-navbar/src/lib/navbar-animation.ts","../../../projects/ngx-bootstrap-navbar/src/lib/navbar-collapse.component.ts","../../../projects/ngx-bootstrap-navbar/src/lib/navbar.module.ts","../../../projects/ngx-bootstrap-navbar/src/public-api.ts","../../../projects/ngx-bootstrap-navbar/src/ngx-bootstrap-navbar.ts"],"sourcesContent":["import { Platform } from '@angular/cdk/platform';\r\nimport { ViewportRuler } from '@angular/cdk/scrolling';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport {\r\n  AfterContentInit,\r\n  Directive,\r\n  ElementRef,\r\n  NgZone,\r\n  OnDestroy,\r\n  ChangeDetectorRef,\r\n  Inject,\r\n} from '@angular/core';\r\nimport { merge, Subject } from 'rxjs';\r\nimport { distinctUntilChanged, map, takeUntil, filter } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[ngxNavbarDynamicExpand]',\r\n  host: {\r\n    class: 'navbar text-nowrap',\r\n    '[class.navbar-expand]': 'isExpanded',\r\n  },\r\n})\r\nexport class NgxNavbarDynamicExpandDirective\r\n  implements AfterContentInit, OnDestroy\r\n{\r\n  private readonly onDestroy$ = new Subject<void>();\r\n  private readonly update$ = new Subject<void>();\r\n  private loaded = false;\r\n  private _isExpanded = false;\r\n  get isExpanded() {\r\n    return this._isExpanded;\r\n  }\r\n\r\n  constructor(\r\n    private readonly viewportRuler: ViewportRuler,\r\n    private readonly elRef: ElementRef<HTMLElement>,\r\n    private readonly ngZone: NgZone,\r\n    private readonly cdRef: ChangeDetectorRef,\r\n    private readonly platform: Platform,\r\n    @Inject(DOCUMENT) private readonly _document: Document\r\n  ) {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      merge(this.viewportRuler.change(150), this.update$)\r\n        .pipe(\r\n          filter(\r\n            () =>\r\n              this.loaded ||\r\n              (this.loaded = checkBootstrapStylesAreLoaded(\r\n                this._document,\r\n                this.elRef.nativeElement\r\n              ))\r\n          ),\r\n          map(() => {\r\n            const element = this.elRef.nativeElement;\r\n            let overflowSize;\r\n            if (this.isExpanded) {\r\n              overflowSize = element.scrollWidth - element.offsetWidth;\r\n            } else {\r\n              const clone = element.cloneNode(true) as HTMLElement;\r\n              clone.classList.add('navbar-expand');\r\n              const parent = element.parentElement;\r\n              if (parent) {\r\n                parent.appendChild(clone);\r\n                overflowSize = clone.scrollWidth - clone.offsetWidth;\r\n                parent.removeChild(clone);\r\n              }\r\n            }\r\n            return !overflowSize;\r\n          }),\r\n          distinctUntilChanged(),\r\n          takeUntil(this.onDestroy$)\r\n        )\r\n        .subscribe((isExpanded) => {\r\n          this.ngZone.run(() => {\r\n            this._isExpanded = isExpanded;\r\n            this.cdRef.markForCheck();\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (!this.platform.isBrowser) {\r\n      return;\r\n    }\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.loaded = checkBootstrapStylesAreLoaded(\r\n        this._document,\r\n        this.elRef.nativeElement\r\n      );\r\n      if (this.loaded) {\r\n        this.update$.next();\r\n      } else {\r\n        setTimeout(() => {\r\n          this.ngAfterContentInit();\r\n        }, 1000 / 60);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.update$.complete();\r\n    this.onDestroy$.next();\r\n    this.onDestroy$.complete();\r\n  }\r\n}\r\n\r\nfunction checkBootstrapStylesAreLoaded(\r\n  document: Document,\r\n  element: Element\r\n): boolean {\r\n  const documentWindow = document.defaultView || window;\r\n  const computedStyle =\r\n    documentWindow && documentWindow.getComputedStyle\r\n      ? documentWindow.getComputedStyle(element)\r\n      : false;\r\n  return computedStyle && computedStyle.whiteSpace === 'nowrap';\r\n}\r\n","import { animate, AnimationTriggerMetadata, style, transition, trigger } from '@angular/animations';\r\n/** Time and timing curve for navbar animations. */\r\nexport const NAVBAR_ANIMATION_TIMING = '300ms ease-out';\r\n\r\nexport const ngxNavbarAnimations: {\r\n  readonly navbarSlide: AnimationTriggerMetadata;\r\n} = {\r\n  navbarSlide: trigger('slideState', [\r\n    transition('false => true', [\r\n      style({\r\n        opacity: 0,\r\n        height: 0,\r\n        overflow: 'hidden'\r\n      }),\r\n      animate(\r\n        NAVBAR_ANIMATION_TIMING,\r\n        style({\r\n          opacity: 1,\r\n          height: '*'\r\n        })\r\n      )\r\n    ]),\r\n    transition('true => false', [\r\n      animate(\r\n        NAVBAR_ANIMATION_TIMING,\r\n        style({\r\n          display: 'block',\r\n          opacity: 0,\r\n          height: 0,\r\n          overflow: 'hidden'\r\n        })\r\n      )\r\n    ])\r\n  ])\r\n};\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { ngxNavbarAnimations } from './navbar-animation';\r\n\r\n@Component({\r\n  selector: 'ngx-navbar-collapse',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  styles: [\r\n    `\r\n      .ngx-navbar-collapse.collapsing {\r\n        height: auto;\r\n      }\r\n    `\r\n  ],\r\n  host: {\r\n    class: 'navbar-collapse ngx-navbar-collapse',\r\n    '[class.collapse]': '!isTransitioning',\r\n    '[class.show]': '!isCollapsed && !isTransitioning',\r\n    '[class.collapsing]': 'isTransitioning',\r\n    '[@slideState]': '!isCollapsed',\r\n    '(@slideState.done)': 'isTransitioning = false'\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [ngxNavbarAnimations.navbarSlide],\r\n  exportAs: 'ngxNavbarCollapse'\r\n})\r\nexport class NgxNavbarCollapseComponent {\r\n  public isCollapsed = true;\r\n  public isTransitioning = false;\r\n\r\n  constructor(private readonly cdRef: ChangeDetectorRef) {}\r\n\r\n  toggle() {\r\n    this.isTransitioning = true;\r\n    this.isCollapsed = !this.isCollapsed;\r\n    this.cdRef.markForCheck();\r\n  }\r\n\r\n  close() {\r\n    if (this.isCollapsed) {\r\n      return;\r\n    }\r\n    this.isTransitioning = true;\r\n    this.isCollapsed = true;\r\n    this.cdRef.markForCheck();\r\n  }\r\n\r\n  open() {\r\n    if (!this.isCollapsed) {\r\n      return;\r\n    }\r\n    this.isTransitioning = true;\r\n    this.isCollapsed = false;\r\n    this.cdRef.markForCheck();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgxNavbarCollapseComponent } from './navbar-collapse.component';\r\nimport { NgxNavbarDynamicExpandDirective } from './navbar-dynamic-collapse.directive';\r\n\r\n@NgModule({\r\n  declarations: [NgxNavbarCollapseComponent, NgxNavbarDynamicExpandDirective],\r\n  imports: [CommonModule],\r\n  exports: [NgxNavbarCollapseComponent, NgxNavbarDynamicExpandDirective]\r\n})\r\nexport class NgxNavbarModule {}\r\n","/*\n * Public API Surface of ngx-bootstrap-navbar\n */\n\nexport * from './lib/navbar-dynamic-collapse.directive';\nexport * from './lib/navbar-collapse.component';\nexport * from './lib/navbar.module';\nexport * from './lib/navbar-animation';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}