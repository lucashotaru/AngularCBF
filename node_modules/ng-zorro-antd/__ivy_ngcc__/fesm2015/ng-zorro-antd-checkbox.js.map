{"version":3,"file":"ng-zorro-antd-checkbox.js","sources":["../../components/checkbox/checkbox-wrapper.component.ts","../../components/checkbox/checkbox.component.ts","../../components/checkbox/checkbox-group.component.ts","../../components/checkbox/checkbox.module.ts","../../components/checkbox/public-api.ts","../../components/checkbox/ng-zorro-antd-checkbox.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Output,\n  Renderer2,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { NzCheckboxComponent } from './checkbox.component';\n\n@Component({\n  selector: 'nz-checkbox-wrapper',\n  exportAs: 'nzCheckboxWrapper',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: ` <ng-content></ng-content> `\n})\nexport class NzCheckboxWrapperComponent {\n  @Output() readonly nzOnChange = new EventEmitter<NzSafeAny[]>();\n  private checkboxList: NzCheckboxComponent[] = [];\n\n  addCheckbox(value: NzCheckboxComponent): void {\n    this.checkboxList.push(value);\n  }\n\n  removeCheckbox(value: NzCheckboxComponent): void {\n    this.checkboxList.splice(this.checkboxList.indexOf(value), 1);\n  }\n\n  onChange(): void {\n    const listOfCheckedValue = this.checkboxList.filter(item => item.nzChecked).map(item => item.nzValue);\n    this.nzOnChange.emit(listOfCheckedValue);\n  }\n\n  constructor(renderer: Renderer2, elementRef: ElementRef) {\n    renderer.addClass(elementRef.nativeElement, 'ant-checkbox-group');\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { BooleanInput, NzSafeAny, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { NzCheckboxWrapperComponent } from './checkbox-wrapper.component';\n\n@Component({\n  selector: '[nz-checkbox]',\n  exportAs: 'nzCheckbox',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <span\n      class=\"ant-checkbox\"\n      [class.ant-checkbox-checked]=\"nzChecked && !nzIndeterminate\"\n      [class.ant-checkbox-disabled]=\"nzDisabled\"\n      [class.ant-checkbox-indeterminate]=\"nzIndeterminate\"\n    >\n      <input\n        #inputElement\n        type=\"checkbox\"\n        class=\"ant-checkbox-input\"\n        [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n        [attr.id]=\"nzId\"\n        [checked]=\"nzChecked\"\n        [ngModel]=\"nzChecked\"\n        [disabled]=\"nzDisabled\"\n        (ngModelChange)=\"innerCheckedChange($event)\"\n        (click)=\"$event.stopPropagation()\"\n      />\n      <span class=\"ant-checkbox-inner\"></span>\n    </span>\n    <span><ng-content></ng-content></span>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzCheckboxComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.ant-checkbox-wrapper-checked]': 'nzChecked',\n    '[class.ant-checkbox-rtl]': `dir === 'rtl'`,\n    '(click)': 'hostClick($event)'\n  }\n})\nexport class NzCheckboxComponent implements OnInit, ControlValueAccessor, OnDestroy, AfterViewInit {\n  static ngAcceptInputType_nzAutoFocus: BooleanInput;\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n  static ngAcceptInputType_nzIndeterminate: BooleanInput;\n  static ngAcceptInputType_nzChecked: BooleanInput;\n\n  dir: Direction = 'ltr';\n  private destroy$ = new Subject<void>();\n\n  onChange: OnChangeType = () => {};\n  onTouched: OnTouchedType = () => {};\n  @ViewChild('inputElement', { static: true }) private inputElement!: ElementRef;\n  @Output() readonly nzCheckedChange = new EventEmitter<boolean>();\n  @Input() nzValue: NzSafeAny | null = null;\n  @Input() @InputBoolean() nzAutoFocus = false;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() @InputBoolean() nzIndeterminate = false;\n  @Input() @InputBoolean() nzChecked = false;\n  @Input() nzId: string | null = null;\n\n  hostClick(e: MouseEvent): void {\n    e.preventDefault();\n    this.focus();\n    this.innerCheckedChange(!this.nzChecked);\n  }\n\n  innerCheckedChange(checked: boolean): void {\n    if (!this.nzDisabled) {\n      this.nzChecked = checked;\n      this.onChange(this.nzChecked);\n      this.nzCheckedChange.emit(this.nzChecked);\n      if (this.nzCheckboxWrapperComponent) {\n        this.nzCheckboxWrapperComponent.onChange();\n      }\n    }\n  }\n\n  writeValue(value: boolean): void {\n    this.nzChecked = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: OnChangeType): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.nzDisabled = disabled;\n    this.cdr.markForCheck();\n  }\n\n  focus(): void {\n    this.focusMonitor.focusVia(this.inputElement, 'keyboard');\n  }\n\n  blur(): void {\n    this.inputElement.nativeElement.blur();\n  }\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    @Optional() private nzCheckboxWrapperComponent: NzCheckboxWrapperComponent,\n    private cdr: ChangeDetectorRef,\n    private focusMonitor: FocusMonitor,\n    @Optional() private directionality: Directionality\n  ) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-checkbox-wrapper');\n  }\n\n  ngOnInit(): void {\n    this.focusMonitor\n      .monitor(this.elementRef, true)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(focusOrigin => {\n        if (!focusOrigin) {\n          Promise.resolve().then(() => this.onTouched());\n        }\n      });\n    if (this.nzCheckboxWrapperComponent) {\n      this.nzCheckboxWrapperComponent.addCheckbox(this);\n    }\n\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n  }\n  ngAfterViewInit(): void {\n    if (this.nzAutoFocus) {\n      this.focus();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n    if (this.nzCheckboxWrapperComponent) {\n      this.nzCheckboxWrapperComponent.removeCheckbox(this);\n    }\n\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { BooleanInput, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nexport interface NzCheckBoxOptionInterface {\n  label: string;\n  value: string;\n  checked?: boolean;\n  disabled?: boolean;\n}\n\n@Component({\n  selector: 'nz-checkbox-group',\n  exportAs: 'nzCheckboxGroup',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <label\n      nz-checkbox\n      class=\"ant-checkbox-group-item\"\n      *ngFor=\"let o of options; trackBy: trackByOption\"\n      [nzDisabled]=\"o.disabled || nzDisabled\"\n      [nzChecked]=\"o.checked!\"\n      (nzCheckedChange)=\"onCheckedChange(o, $event)\"\n    >\n      <span>{{ o.label }}</span>\n    </label>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzCheckboxGroupComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.ant-checkbox-group-rtl]': `dir === 'rtl'`\n  }\n})\nexport class NzCheckboxGroupComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n\n  onChange: OnChangeType = () => {};\n  onTouched: OnTouchedType = () => {};\n  options: NzCheckBoxOptionInterface[] = [];\n  @Input() @InputBoolean() nzDisabled = false;\n\n  dir: Direction = 'ltr';\n\n  private destroy$ = new Subject<void>();\n\n  trackByOption(_: number, option: NzCheckBoxOptionInterface): string {\n    return option.value;\n  }\n\n  onCheckedChange(option: NzCheckBoxOptionInterface, checked: boolean): void {\n    option.checked = checked;\n    this.onChange(this.options);\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n    private focusMonitor: FocusMonitor,\n    private cdr: ChangeDetectorRef,\n    @Optional() private directionality: Directionality\n  ) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-checkbox-group');\n  }\n\n  ngOnInit(): void {\n    this.focusMonitor\n      .monitor(this.elementRef, true)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(focusOrigin => {\n        if (!focusOrigin) {\n          Promise.resolve().then(() => this.onTouched());\n        }\n      });\n\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  writeValue(value: NzCheckBoxOptionInterface[]): void {\n    this.options = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: OnChangeType): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.nzDisabled = disabled;\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NzCheckboxGroupComponent } from './checkbox-group.component';\nimport { NzCheckboxWrapperComponent } from './checkbox-wrapper.component';\nimport { NzCheckboxComponent } from './checkbox.component';\n\n@NgModule({\n  imports: [BidiModule, CommonModule, FormsModule, A11yModule],\n  declarations: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent],\n  exports: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent]\n})\nexport class NzCheckboxModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './checkbox.component';\nexport * from './checkbox.module';\nexport * from './checkbox-group.component';\nexport * from './checkbox-wrapper.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}