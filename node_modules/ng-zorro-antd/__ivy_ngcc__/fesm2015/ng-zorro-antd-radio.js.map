{"version":3,"file":"ng-zorro-antd-radio.js","sources":["../../components/radio/radio-button.directive.ts","../../components/radio/radio.service.ts","../../components/radio/radio-group.component.ts","../../components/radio/radio.component.ts","../../components/radio/radio.module.ts","../../components/radio/public-api.ts","../../components/radio/ng-zorro-antd-radio.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[nz-radio-button]'\n})\nexport class NzRadioButtonDirective {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject, Subject } from 'rxjs';\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Injectable()\nexport class NzRadioService {\n  selected$ = new ReplaySubject<NzSafeAny>(1);\n  touched$ = new Subject<void>();\n  disabled$ = new ReplaySubject<boolean>(1);\n  name$ = new ReplaySubject<string>(1);\n  touch(): void {\n    this.touched$.next();\n  }\n  select(value: NzSafeAny): void {\n    this.selected$.next(value);\n  }\n  setDisabled(value: boolean): void {\n    this.disabled$.next(value);\n  }\n  setName(value: string): void {\n    this.name$.next(value);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { BooleanInput, NzSafeAny, NzSizeLDSType, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { NzRadioService } from './radio.service';\n\nexport type NzRadioButtonStyle = 'outline' | 'solid';\n\n@Component({\n  selector: 'nz-radio-group',\n  exportAs: 'nzRadioGroup',\n  preserveWhitespaces: false,\n  template: ` <ng-content></ng-content> `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NzRadioService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzRadioGroupComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.ant-radio-group-large]': `nzSize === 'large'`,\n    '[class.ant-radio-group-small]': `nzSize === 'small'`,\n    '[class.ant-radio-group-solid]': `nzButtonStyle === 'solid'`,\n    '[class.ant-radio-group-rtl]': `dir === 'rtl'`\n  }\n})\nexport class NzRadioGroupComponent implements OnInit, ControlValueAccessor, OnDestroy, OnChanges {\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n\n  private value: NzSafeAny | null = null;\n  private destroy$ = new Subject();\n  onChange: OnChangeType = () => {};\n  onTouched: OnTouchedType = () => {};\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() nzButtonStyle: NzRadioButtonStyle = 'outline';\n  @Input() nzSize: NzSizeLDSType = 'default';\n  @Input() nzName: string | null = null;\n\n  dir: Direction = 'ltr';\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private nzRadioService: NzRadioService,\n    private elementRef: ElementRef,\n    @Optional() private directionality: Directionality\n  ) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-radio-group');\n  }\n\n  ngOnInit(): void {\n    this.nzRadioService.selected$.pipe(takeUntil(this.destroy$)).subscribe(value => {\n      if (this.value !== value) {\n        this.value = value;\n        this.onChange(this.value);\n      }\n    });\n    this.nzRadioService.touched$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      Promise.resolve().then(() => this.onTouched());\n    });\n\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzDisabled, nzName } = changes;\n    if (nzDisabled) {\n      this.nzRadioService.setDisabled(this.nzDisabled);\n    }\n    if (nzName) {\n      this.nzRadioService.setName(this.nzName!);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  writeValue(value: NzSafeAny): void {\n    this.value = value;\n    this.nzRadioService.select(value);\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: OnChangeType): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.nzDisabled = isDisabled;\n    this.nzRadioService.setDisabled(isDisabled);\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { fromEvent, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { BooleanInput, NzSafeAny, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { NzRadioButtonDirective } from './radio-button.directive';\nimport { NzRadioService } from './radio.service';\n\n@Component({\n  selector: '[nz-radio],[nz-radio-button]',\n  exportAs: 'nzRadio',\n  preserveWhitespaces: false,\n  template: `\n    <span\n      [class.ant-radio]=\"!isRadioButton\"\n      [class.ant-radio-checked]=\"isChecked && !isRadioButton\"\n      [class.ant-radio-disabled]=\"nzDisabled && !isRadioButton\"\n      [class.ant-radio-button]=\"isRadioButton\"\n      [class.ant-radio-button-checked]=\"isChecked && isRadioButton\"\n      [class.ant-radio-button-disabled]=\"nzDisabled && isRadioButton\"\n    >\n      <input\n        #inputElement\n        type=\"radio\"\n        [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n        [class.ant-radio-input]=\"!isRadioButton\"\n        [class.ant-radio-button-input]=\"isRadioButton\"\n        [disabled]=\"nzDisabled\"\n        [checked]=\"isChecked\"\n        [attr.name]=\"name\"\n      />\n      <span [class.ant-radio-inner]=\"!isRadioButton\" [class.ant-radio-button-inner]=\"isRadioButton\"></span>\n    </span>\n    <span><ng-content></ng-content></span>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzRadioComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.ant-radio-wrapper]': '!isRadioButton',\n    '[class.ant-radio-button-wrapper]': 'isRadioButton',\n    '[class.ant-radio-wrapper-checked]': 'isChecked && !isRadioButton',\n    '[class.ant-radio-button-wrapper-checked]': 'isChecked && isRadioButton',\n    '[class.ant-radio-wrapper-disabled]': 'nzDisabled && !isRadioButton',\n    '[class.ant-radio-button-wrapper-disabled]': 'nzDisabled && isRadioButton',\n    '[class.ant-radio-wrapper-rtl]': `!isRadioButton && dir === 'rtl'`,\n    '[class.ant-radio-button-wrapper-rtl]': `isRadioButton && dir === 'rtl'`\n  }\n})\nexport class NzRadioComponent implements ControlValueAccessor, AfterViewInit, OnDestroy, OnInit {\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n  static ngAcceptInputType_nzAutoFocus: BooleanInput;\n\n  private isNgModel = false;\n  private destroy$ = new Subject<void>();\n  isChecked = false;\n  name: string | null = null;\n  isRadioButton = !!this.nzRadioButtonDirective;\n  onChange: OnChangeType = () => {};\n  onTouched: OnTouchedType = () => {};\n  @ViewChild('inputElement', { static: false }) inputElement?: ElementRef;\n  @Input() nzValue: NzSafeAny | null = null;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() @InputBoolean() nzAutoFocus = false;\n\n  dir: Direction = 'ltr';\n\n  focus(): void {\n    this.focusMonitor.focusVia(this.inputElement!, 'keyboard');\n  }\n\n  blur(): void {\n    this.inputElement!.nativeElement.blur();\n  }\n\n  constructor(\n    private ngZone: NgZone,\n    private elementRef: ElementRef,\n    private cdr: ChangeDetectorRef,\n    private focusMonitor: FocusMonitor,\n    @Optional() private directionality: Directionality,\n    @Optional() private nzRadioService: NzRadioService,\n    @Optional() private nzRadioButtonDirective: NzRadioButtonDirective\n  ) {}\n\n  setDisabledState(disabled: boolean): void {\n    this.nzDisabled = disabled;\n    this.cdr.markForCheck();\n  }\n\n  writeValue(value: boolean): void {\n    this.isChecked = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: OnChangeType): void {\n    this.isNgModel = true;\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouched = fn;\n  }\n\n  ngOnInit(): void {\n    if (this.nzRadioService) {\n      this.nzRadioService.name$.pipe(takeUntil(this.destroy$)).subscribe(name => {\n        this.name = name;\n        this.cdr.markForCheck();\n      });\n      this.nzRadioService.disabled$.pipe(takeUntil(this.destroy$)).subscribe(disabled => {\n        this.nzDisabled = disabled;\n        this.cdr.markForCheck();\n      });\n      this.nzRadioService.selected$.pipe(takeUntil(this.destroy$)).subscribe(value => {\n        this.isChecked = this.nzValue === value;\n        this.cdr.markForCheck();\n      });\n    }\n    this.focusMonitor\n      .monitor(this.elementRef, true)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(focusOrigin => {\n        if (!focusOrigin) {\n          Promise.resolve().then(() => this.onTouched());\n          if (this.nzRadioService) {\n            this.nzRadioService.touch();\n          }\n        }\n      });\n\n    this.directionality.change.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n\n    this.setupClickListener();\n  }\n\n  ngAfterViewInit(): void {\n    if (this.nzAutoFocus) {\n      this.focus();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  private setupClickListener(): void {\n    this.ngZone.runOutsideAngular(() => {\n      fromEvent<MouseEvent>(this.elementRef.nativeElement, 'click')\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(event => {\n          /** prevent label click triggered twice. **/\n          event.stopPropagation();\n          event.preventDefault();\n          if (this.nzDisabled || this.isChecked) {\n            return;\n          }\n          this.ngZone.run(() => {\n            if (this.nzRadioService) {\n              this.nzRadioService.select(this.nzValue);\n            }\n            if (this.isNgModel) {\n              this.isChecked = true;\n              this.onChange(true);\n            }\n            this.cdr.markForCheck();\n          });\n        });\n    });\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NzRadioButtonDirective } from './radio-button.directive';\nimport { NzRadioGroupComponent } from './radio-group.component';\nimport { NzRadioComponent } from './radio.component';\n\n@NgModule({\n  imports: [BidiModule, CommonModule, FormsModule],\n  exports: [NzRadioComponent, NzRadioButtonDirective, NzRadioGroupComponent],\n  declarations: [NzRadioComponent, NzRadioButtonDirective, NzRadioGroupComponent]\n})\nexport class NzRadioModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './radio-button.directive';\nexport * from './radio-group.component';\nexport * from './radio.component';\nexport * from './radio.service';\nexport * from './radio.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}