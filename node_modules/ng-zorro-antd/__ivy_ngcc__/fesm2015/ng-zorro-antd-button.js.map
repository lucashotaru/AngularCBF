{"version":3,"file":"ng-zorro-antd-button.js","sources":["../../components/button/button.component.ts","../../components/button/button-group.component.ts","../../components/button/button.module.ts","../../components/button/public-api.ts","../../components/button/ng-zorro-antd-button.ts"],"names":["NzTransitionPatchModule"],"mappings":";;;;;;;;;;;;AAAA;AACC;AACC;AACC;;;;;;;;;;;;;AAiCH,MAAM,qBAAqB,GAAgB,QAAQ,CAAC;AAEpD,MA6Ba,iBAAiB;AAAI,IA8ChC,YACU,MAAc,EACd,UAAsB,EACtB,GAAsB,EACtB,QAAmB,EACpB,eAAgC,EACnB,cAA8B;AAClD,QANQ,WAAM,GAAN,MAAM,CAAQ;AAC1B,QAAY,eAAU,GAAV,UAAU,CAAY;AAClC,QAAY,QAAG,GAAH,GAAG,CAAmB;AAClC,QAAY,aAAQ,GAAR,QAAQ,CAAW;AAC/B,QAAW,oBAAe,GAAf,eAAe,CAAiB;AAC3C,QAAwB,mBAAc,GAAd,cAAc,CAAgB;AACrD,QApDU,kBAAa,GAAgB,qBAAqB,CAAC;AAC7D,QAQ0B,YAAO,GAAY,KAAK,CAAC;AACnD,QAA0B,YAAO,GAAY,KAAK,CAAC;AACnD,QAA0B,aAAQ,GAAY,KAAK,CAAC;AACpD,QAA0B,cAAS,GAAY,KAAK,CAAC;AACrD,QAA0B,aAAQ,GAAY,KAAK,CAAC;AACpD,QAA0B,aAAQ,GAAY,KAAK,CAAC;AACpD,QAAU,aAAQ,GAA2B,IAAI,CAAC;AAClD,QAAU,WAAM,GAAiB,IAAI,CAAC;AACtC,QAAU,YAAO,GAAkB,IAAI,CAAC;AACxC,QAAwB,WAAM,GAAiB,SAAS,CAAC;AACzD,QAAC,QAAG,GAAc,KAAK,CAAC;AACxB,QAAS,aAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;AACxC,QAAS,aAAQ,GAAG,IAAI,OAAO,EAAW,CAAC;AAE5C;AACE,QA8BE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAC1D,QAAG,IAAI,CAAC,eAAe;AACvB,aAAM,gCAAgC,CAAC,qBAAqB,CAAC;AAC7D,aAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACpC,aAAM,SAAS,CAAC;AAChB,YAAO,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;AAC/B,SAAM,CAAC,CAAC;AACR,KAAE;AAEH,IAxCE,UAAU,CAAC,KAAe,EAAE,QAAmB;AAAK,QAClD,KAAK,CAAC,OAAO,CAAC,IAAI;AACrB,YAAK,IAAI,IAAI,CAAC,QAAQ,KAAK,OAAO,EAAE;AACpC,gBAAO,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AACnD,gBAAO,MAAM,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAChD,gBAAO,QAAQ,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACjD,gBAAO,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACxC,aAAM;AACN,SAAI,CAAC,CAAC;AACN,KAAE;AAEH,IAAE,cAAc,CAAC,OAA0B,EAAE,QAAmB;AAAK,QACjE,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AACrD,QAAG,MAAM,SAAS,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC;AAC7E,QAAG,MAAM,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC;AACtE,QAAG,MAAM,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,MAAM,CAAC,CAAC;AACrE,QAAG,MAAM,UAAU,GAAG,MAAM,IAAI,MAAM,IAAI,SAAS,IAAI,CAAC,CAAC;AACzD,QAAG,IAAI,UAAU,EAAE;AACnB,YAAK,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAAC;AACrD,SAAI;AACJ,KAAE;AAEH,IAkBE,QAAQ;AAAM;AACJ,QAAR,MAAA,IAAI,CAAC,cAAc,CAAC,MAAM,0CAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,CAAC,SAAoB;AAC7F,YAAK,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;AAC1B,YAAK,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;AAC9B,SAAI,CAAC,CAAC;AAEP,QAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;AAEzC,QAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;AACjC;AACO;AACO;AACO;AACO,YAAvB,SAAS,CAAa,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,OAAO,CAAC;AAClE,iBAAQ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACtC,iBAAQ,SAAS,CAAC,KAAK;AACvB;AAAyB,gBAAhB,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAA,MAAC,KAAK,CAAC,MAAsB,0CAAE,OAAO,MAAK,GAAG,EAAE;AAC9E,oBAAW,KAAK,CAAC,cAAc,EAAE,CAAC;AAClC,oBAAW,KAAK,CAAC,wBAAwB,EAAE,CAAC;AAC5C,iBAAU;AACV,aAAQ,CAAC,CAAC;AACV,SAAI,CAAC,CAAC;AACN,KAAE;AAEH,IAAE,WAAW,CAAC,OAAsB;AAAK,QACrC,MAAM,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC;AACjC,QAAG,IAAI,SAAS,EAAE;AAClB,YAAK,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACxC,SAAI;AACJ,KAAE;AAEH,IAAE,eAAe;AAAM,QACnB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AACrE,QAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC5E,KAAE;AAEH,IAAE,kBAAkB;AAAM,QACtB,IAAI,CAAC,QAAQ;AAChB,aAAM,IAAI,CACH,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EACzB,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,EAC3C,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CACzB;AACN,aAAM,SAAS,CAAC,OAAO;AACvB,YAAO,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC;AACvE,YAAO,IAAI,OAAO,EAAE;AACpB,gBAAS,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;AAClE,aAAQ;AAAE,iBAAI;AACd,gBAAS,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;AAC7D,aAAQ;AACR,SAAM,CAAC,CAAC;AACR,KAAE;AAEH,IAAE,WAAW;AAAM,QACf,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AACxB,QAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;AAC5B,KAAE;AACF;+CAtJA,SAAS,SAAC,mBACT,QAAQ,EAAE,iCAAiC,mBAC3C,QAAQ,EAAE,UAAU,mBACpB,mBAAmB,EAAE,KAAK,mBAC1B,eAAe,EAAE,uBAAuB,CAAC,MAAM,mBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI,mBACrC,QAAQ,EAAE;kEAGT,mBACD,IAAI,EAAE,uBACJ,yBAAyB,EAAE,sBAAsB,uBACjD,wBAAwB,EAAE,qBAAqB;MAC/C,sBAAsB,EAAE,mBAAmB,uBAC3C;;CAAsB,EAAE;MAAmB,uBAC3C,wBAAwB,EAAE,sBAAsB,uBAChD;sBAAuB,EAAE,qBAAqB,uBAC9C,oBAAoB,EAAE;QAAoB,uBAC1C,oBAAoB,EAAE,oBAAoB,uBAC1C,2BAA2B,EAAE,UAAU;mBACvC,yBAAyB,EAAE,WAAW,uBACtC,kCAAkC,EAAE,SAAS,uBAC7C,uBAAuB,EAAE,SAAS,uBAClC,iCAAiC,EAAE,UAAU,uBAC7C,qBAAqB,EAAE,eAAe,uBACtC,iBAAiB,EAAE,uDAAuD,uBAC1E,iBAAiB,EAAE,kBAAkB,mBACtC,eACF;;;;;;;wIACK;AAAE;AAA4C,YApDlD,MAAM;AACL,YAHD,UAAU;AACT,YAJD,iBAAiB;AAChB,YASD,SAAS;AACR,YAMmB,eAAe;AAAK,YAtBtB,cAAc,uBAkH7B,QAAQ;AAAO;AAAI;AAEvB,qCA7CE,YAAY,SAAC,eAAe,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;AAAQ,sBAC1D,KAAK;AAAM,sBACX,KAAK;AAAM,uBACX,KAAK;AAAM,wBACX,KAAK;AAAM,uBACX,KAAK;AAAM,uBACX,KAAK;AAAM,uBACX,KAAK;AAAM,qBACX,KAAK;AAAM,sBACX,KAAK;AAAM,qBACX,KAAK;AAAK;AATc;AAAc,IAA7B,YAAY,EAAE;AAAE,kDAAwB;AACzB;AAAc,IAA7B,YAAY,EAAE;AAAE,kDAAwB;AACzB;AAAc,IAA7B,YAAY,EAAE;AAAE,mDAAyB;AAC1B;AAAc,IAA7B,YAAY,EAAE;AAAE,oDAA0B;AAC3B;AAAc,IAA7B,YAAY,EAAE;AAAE,mDAAyB;AAC1B;AAAc,IAA7B,YAAY,EAAE;AAAE,mDAAyB;AAI5B;AAAc,IAA3B,UAAU,EAAE;AAAE,iDAAgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAC1D;AAAE;ACvFF;AACC;AACC;AACC;AAEA,MA6BU,sBAAsB;AAAI,IAOrC,YAAoB,UAAsB,EAAsB,cAA8B;AAC/F,QADqB,eAAU,GAAV,UAAU,CAAY;AAAE,QAAoB,mBAAc,GAAd,cAAc,CAAgB;AAAE,QANvF,WAAM,GAAsB,SAAS,CAAC;AAEjD,QAAE,QAAG,GAAc,KAAK,CAAC;AAEzB,QAAU,aAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;AAEzC;AAA6D,QAEzD,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;AAChE,KAAE;AACF,IAAC,QAAQ;AAAM;AACJ,QAAR,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;AACxC,QAAG,MAAA,IAAI,CAAC,cAAc,CAAC,MAAM,0CAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,CAAC,SAAoB;AAC7F,YAAK,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;AAC1B,SAAI,CAAC,CAAC;AACN,KAAE;AAEH,IAAE,WAAW;AAAM,QACf,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AACxB,QAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;AAC5B,KAAE;AACF;oDAnCA,SAAS,SAAC,mBACT,QAAQ,EAAE,iBAAiB,mBAC3B,QAAQ,EAAE,eAAe,mBACzB,eAAe,EAAE;EAAuB,CAAC,MAAM,mBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI,mBACrC,IAAI,EAAE,uBACJ,0BAA0B,EAAE,oBAAoB,uBAChD,0BAA0B,EAAE;AAAoB,uBAChD,2BAA2B,EAAE,eAAe,mBAC7C,mBACD,mBAAmB,EAAE,KAAK,mBAC1B;EAAQ,EAAE,6BAA6B,eACxC;;;iDACK;AAAE;AAAiD,YAzBvD,UAAU;AACT,YALiB,cAAc,uBAoCa,QAAQ;AAAO;AAAI;AACzD,qBAPN,KAAK;AAAK;;;;;;;;;;;;;;;;;;;;oBAAE;AAAE;ACnCjB;AACC;AACC;AACC;AAEA,MAgBU,cAAc;AAC3B;4CANC,QAAQ,SAAC,mBACR,YAAY,EAAE,CAAC;cAAiB,EAAE,sBAAsB,CAAC,mBACzD,OAAO,EAAE,CAAC,iBAAiB;AAAE,sBAAsB,EAAEA,wBAAuB,EAAE,YAAY,CAAC,mBAC3F,OAAO,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAEA,wBAAuB,CAAC,eACzF;;;;;;;;;kbACK;AAAE;ACrBR;AACC;AACC;AACC;AAEA;ACLH;AACC;AACC;AAEA;AAAE;AACyC","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { filter, startWith, takeUntil } from 'rxjs/operators';\n\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { NzIconDirective } from 'ng-zorro-antd/icon';\n\nexport type NzButtonType = 'primary' | 'default' | 'dashed' | 'link' | 'text' | null;\nexport type NzButtonShape = 'circle' | 'round' | null;\nexport type NzButtonSize = 'large' | 'default' | 'small';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'button';\n\n@Component({\n  selector: 'button[nz-button], a[nz-button]',\n  exportAs: 'nzButton',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <i nz-icon nzType=\"loading\" *ngIf=\"nzLoading\"></i>\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[class.ant-btn-primary]': `nzType === 'primary'`,\n    '[class.ant-btn-dashed]': `nzType === 'dashed'`,\n    '[class.ant-btn-link]': `nzType === 'link'`,\n    '[class.ant-btn-text]': `nzType === 'text'`,\n    '[class.ant-btn-circle]': `nzShape === 'circle'`,\n    '[class.ant-btn-round]': `nzShape === 'round'`,\n    '[class.ant-btn-lg]': `nzSize === 'large'`,\n    '[class.ant-btn-sm]': `nzSize === 'small'`,\n    '[class.ant-btn-dangerous]': `nzDanger`,\n    '[class.ant-btn-loading]': `nzLoading`,\n    '[class.ant-btn-background-ghost]': `nzGhost`,\n    '[class.ant-btn-block]': `nzBlock`,\n    '[class.ant-input-search-button]': `nzSearch`,\n    '[class.ant-btn-rtl]': `dir === 'rtl'`,\n    '[attr.tabindex]': 'disabled ? -1 : (tabIndex === null ? null : tabIndex)',\n    '[attr.disabled]': 'disabled || null'\n  }\n})\nexport class NzButtonComponent implements OnDestroy, OnChanges, AfterViewInit, AfterContentInit, OnInit {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n  static ngAcceptInputType_nzBlock: BooleanInput;\n  static ngAcceptInputType_nzGhost: BooleanInput;\n  static ngAcceptInputType_nzSearch: BooleanInput;\n  static ngAcceptInputType_nzLoading: BooleanInput;\n  static ngAcceptInputType_nzDanger: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n\n  @ContentChild(NzIconDirective, { read: ElementRef }) nzIconDirectiveElement!: ElementRef;\n  @Input() @InputBoolean() nzBlock: boolean = false;\n  @Input() @InputBoolean() nzGhost: boolean = false;\n  @Input() @InputBoolean() nzSearch: boolean = false;\n  @Input() @InputBoolean() nzLoading: boolean = false;\n  @Input() @InputBoolean() nzDanger: boolean = false;\n  @Input() @InputBoolean() disabled: boolean = false;\n  @Input() tabIndex: number | string | null = null;\n  @Input() nzType: NzButtonType = null;\n  @Input() nzShape: NzButtonShape = null;\n  @Input() @WithConfig() nzSize: NzButtonSize = 'default';\n  dir: Direction = 'ltr';\n  private destroy$ = new Subject<void>();\n  private loading$ = new Subject<boolean>();\n\n  insertSpan(nodes: NodeList, renderer: Renderer2): void {\n    nodes.forEach(node => {\n      if (node.nodeName === '#text') {\n        const span = renderer.createElement('span');\n        const parent = renderer.parentNode(node);\n        renderer.insertBefore(parent, span, node);\n        renderer.appendChild(span, node);\n      }\n    });\n  }\n\n  assertIconOnly(element: HTMLButtonElement, renderer: Renderer2): void {\n    const listOfNode = Array.from(element.childNodes);\n    const iconCount = listOfNode.filter(node => node.nodeName === 'I').length;\n    const noText = listOfNode.every(node => node.nodeName !== '#text');\n    const noSpan = listOfNode.every(node => node.nodeName !== 'SPAN');\n    const isIconOnly = noSpan && noText && iconCount >= 1;\n    if (isIconOnly) {\n      renderer.addClass(element, 'ant-btn-icon-only');\n    }\n  }\n\n  constructor(\n    private ngZone: NgZone,\n    private elementRef: ElementRef,\n    private cdr: ChangeDetectorRef,\n    private renderer: Renderer2,\n    public nzConfigService: NzConfigService,\n    @Optional() private directionality: Directionality\n  ) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-btn');\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnInit(): void {\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n\n    this.ngZone.runOutsideAngular(() => {\n      // Caretaker note: this event listener could've been added through `host.click` or `HostListener`.\n      // The compiler generates the `ɵɵlistener` instruction which wraps the actual listener internally into the\n      // function, which runs `markDirty()` before running the actual listener (the decorated class method).\n      // Since we're preventing the default behavior and stopping event propagation this doesn't require Angular to run the change detection.\n      fromEvent<MouseEvent>(this.elementRef.nativeElement, 'click')\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(event => {\n          if (this.disabled && (event.target as HTMLElement)?.tagName === 'A') {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n          }\n        });\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzLoading } = changes;\n    if (nzLoading) {\n      this.loading$.next(this.nzLoading);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.assertIconOnly(this.elementRef.nativeElement, this.renderer);\n    this.insertSpan(this.elementRef.nativeElement.childNodes, this.renderer);\n  }\n\n  ngAfterContentInit(): void {\n    this.loading$\n      .pipe(\n        startWith(this.nzLoading),\n        filter(() => !!this.nzIconDirectiveElement),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(loading => {\n        const nativeElement = this.nzIconDirectiveElement.nativeElement;\n        if (loading) {\n          this.renderer.setStyle(nativeElement, 'display', 'none');\n        } else {\n          this.renderer.removeStyle(nativeElement, 'display');\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport type NzButtonGroupSize = 'large' | 'default' | 'small';\n\n@Component({\n  selector: 'nz-button-group',\n  exportAs: 'nzButtonGroup',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.ant-btn-group-lg]': `nzSize === 'large'`,\n    '[class.ant-btn-group-sm]': `nzSize === 'small'`,\n    '[class.ant-btn-group-rtl]': `dir === 'rtl'`\n  },\n  preserveWhitespaces: false,\n  template: ` <ng-content></ng-content> `\n})\nexport class NzButtonGroupComponent implements OnDestroy, OnInit {\n  @Input() nzSize: NzButtonGroupSize = 'default';\n\n  dir: Direction = 'ltr';\n\n  private destroy$ = new Subject<void>();\n\n  constructor(private elementRef: ElementRef, @Optional() private directionality: Directionality) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-btn-group');\n  }\n  ngOnInit(): void {\n    this.dir = this.directionality.value;\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ɵNzTransitionPatchModule as NzTransitionPatchModule } from 'ng-zorro-antd/core/transition-patch';\nimport { NzWaveModule } from 'ng-zorro-antd/core/wave';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzButtonGroupComponent } from './button-group.component';\nimport { NzButtonComponent } from './button.component';\n\n@NgModule({\n  declarations: [NzButtonComponent, NzButtonGroupComponent],\n  exports: [NzButtonComponent, NzButtonGroupComponent, NzTransitionPatchModule, NzWaveModule],\n  imports: [BidiModule, CommonModule, NzWaveModule, NzIconModule, NzTransitionPatchModule]\n})\nexport class NzButtonModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './button.component';\nexport * from './button-group.component';\nexport * from './button.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}