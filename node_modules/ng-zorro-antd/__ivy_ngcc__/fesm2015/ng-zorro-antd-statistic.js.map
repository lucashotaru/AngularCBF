{"version":3,"file":"ng-zorro-antd-statistic.js","sources":["../../components/statistic/statistic.component.ts","../../components/statistic/countdown.component.ts","../../components/statistic/statistic-number.component.ts","../../components/statistic/statistic.module.ts","../../components/statistic/public-api.ts","../../components/statistic/ng-zorro-antd-statistic.ts"],"names":["NzPipesModuleFromCore"],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NgStyleInterface } from 'ng-zorro-antd/core/types';\n\nimport { NzStatisticValueType } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-statistic',\n  exportAs: 'nzStatistic',\n  template: `\n    <div class=\"ant-statistic\" [class.ant-statistic-rtl]=\"dir === 'rtl'\">\n      <div class=\"ant-statistic-title\">\n        <ng-container *nzStringTemplateOutlet=\"nzTitle\">{{ nzTitle }}</ng-container>\n      </div>\n      <div class=\"ant-statistic-content\" [ngStyle]=\"nzValueStyle\">\n        <span *ngIf=\"nzPrefix\" class=\"ant-statistic-content-prefix\">\n          <ng-container *nzStringTemplateOutlet=\"nzPrefix\">{{ nzPrefix }}</ng-container>\n        </span>\n        <nz-statistic-number [nzValue]=\"nzValue\" [nzValueTemplate]=\"nzValueTemplate\"></nz-statistic-number>\n        <span *ngIf=\"nzSuffix\" class=\"ant-statistic-content-suffix\">\n          <ng-container *nzStringTemplateOutlet=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n        </span>\n      </div>\n    </div>\n  `\n})\nexport class NzStatisticComponent implements OnDestroy, OnInit {\n  @Input() nzPrefix?: string | TemplateRef<void>;\n  @Input() nzSuffix?: string | TemplateRef<void>;\n  @Input() nzTitle?: string | TemplateRef<void>;\n  @Input() nzValue?: NzStatisticValueType;\n  @Input() nzValueStyle: NgStyleInterface = {};\n  @Input() nzValueTemplate?: TemplateRef<{ $implicit: NzStatisticValueType }>;\n  dir: Direction = 'ltr';\n\n  private destroy$ = new Subject<void>();\n\n  constructor(protected cdr: ChangeDetectorRef, @Optional() private directionality: Directionality) {}\n\n  ngOnInit(): void {\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Platform } from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { interval, Subscription } from 'rxjs';\n\nimport { NzStatisticComponent } from './statistic.component';\n\nconst REFRESH_INTERVAL = 1000 / 30;\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-countdown',\n  exportAs: 'nzCountdown',\n  template: `\n    <nz-statistic\n      [nzValue]=\"diff\"\n      [nzValueStyle]=\"nzValueStyle\"\n      [nzValueTemplate]=\"nzValueTemplate || countDownTpl\"\n      [nzTitle]=\"nzTitle\"\n      [nzPrefix]=\"nzPrefix\"\n      [nzSuffix]=\"nzSuffix\"\n    ></nz-statistic>\n\n    <ng-template #countDownTpl>{{ diff | nzTimeRange: nzFormat }}</ng-template>\n  `\n})\nexport class NzCountdownComponent extends NzStatisticComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() nzFormat: string = 'HH:mm:ss';\n  @Output() readonly nzCountdownFinish = new EventEmitter<void>();\n\n  diff!: number;\n\n  private target: number = 0;\n  private updater_?: Subscription | null;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    private ngZone: NgZone,\n    private platform: Platform,\n    @Optional() directionality: Directionality\n  ) {\n    super(cdr, directionality);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzValue) {\n      this.target = Number(changes.nzValue.currentValue);\n      if (!changes.nzValue.isFirstChange()) {\n        this.syncTimer();\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.syncTimer();\n  }\n\n  ngOnDestroy(): void {\n    this.stopTimer();\n  }\n\n  syncTimer(): void {\n    if (this.target >= Date.now()) {\n      this.startTimer();\n    } else {\n      this.stopTimer();\n    }\n  }\n\n  startTimer(): void {\n    if (this.platform.isBrowser) {\n      this.ngZone.runOutsideAngular(() => {\n        this.stopTimer();\n        this.updater_ = interval(REFRESH_INTERVAL).subscribe(() => {\n          this.updateValue();\n          this.cdr.detectChanges();\n        });\n      });\n    }\n  }\n\n  stopTimer(): void {\n    if (this.updater_) {\n      this.updater_.unsubscribe();\n      this.updater_ = null;\n    }\n  }\n\n  /**\n   * Update time that should be displayed on the screen.\n   */\n  protected updateValue(): void {\n    this.diff = Math.max(this.target - Date.now(), 0);\n\n    if (this.diff === 0) {\n      this.stopTimer();\n      this.nzCountdownFinish.emit();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { getLocaleNumberSymbol, NumberSymbol } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  LOCALE_ID,\n  OnChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { NzStatisticValueType } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  selector: 'nz-statistic-number',\n  exportAs: 'nzStatisticNumber',\n  template: `\n    <span class=\"ant-statistic-content-value\">\n      <ng-container\n        *ngIf=\"nzValueTemplate\"\n        [ngTemplateOutlet]=\"nzValueTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: nzValue }\"\n      ></ng-container>\n      <ng-container *ngIf=\"!nzValueTemplate\">\n        <span *ngIf=\"displayInt\" class=\"ant-statistic-content-value-int\">{{ displayInt }}</span>\n        <span *ngIf=\"displayDecimal\" class=\"ant-statistic-content-value-decimal\">{{ displayDecimal }}</span>\n      </ng-container>\n    </span>\n  `\n})\nexport class NzStatisticNumberComponent implements OnChanges {\n  @Input() nzValue?: NzStatisticValueType;\n  @Input() nzValueTemplate?: TemplateRef<{ $implicit: NzStatisticValueType }>;\n\n  displayInt = '';\n  displayDecimal = '';\n\n  constructor(@Inject(LOCALE_ID) private locale_id: string) {}\n\n  ngOnChanges(): void {\n    this.formatNumber();\n  }\n\n  private formatNumber(): void {\n    const decimalSeparator: string =\n      typeof this.nzValue === 'number' ? '.' : getLocaleNumberSymbol(this.locale_id, NumberSymbol.Decimal);\n    const value = String(this.nzValue);\n    const [int, decimal] = value.split(decimalSeparator);\n\n    this.displayInt = int;\n    this.displayDecimal = decimal ? `${decimalSeparator}${decimal}` : '';\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzPipesModule as NzPipesModuleFromCore } from 'ng-zorro-antd/core/pipe';\n\nimport { NzCountdownComponent } from './countdown.component';\nimport { NzStatisticNumberComponent } from './statistic-number.component';\nimport { NzStatisticComponent } from './statistic.component';\n\n@NgModule({\n  imports: [BidiModule, CommonModule, PlatformModule, NzOutletModule, NzPipesModuleFromCore],\n  declarations: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent],\n  exports: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent]\n})\nexport class NzStatisticModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './countdown.component';\nexport * from './statistic.component';\nexport * from './statistic.module';\nexport * from './statistic-number.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}