{"version":3,"file":"ng-zorro-antd-message.js","sources":["../../components/message/base.ts","../../components/message/message-container.component.ts","../../components/message/message.service.module.ts","../../components/message/message.service.ts","../../components/message/message.component.ts","../../components/message/message.module.ts","../../components/message/typings.ts","../../components/message/public-api.ts","../../components/message/ng-zorro-antd-message.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACC;AACC;AACC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcH,IAAI,aAAa,GAAG,CAAC,CAAC;AAEtB,MAAsB,WAAW;AAChC,IAGC,YACY,kBAAsC,EACtC,OAAgB,EAClB,QAAkB;AAC1B,QAHU,uBAAkB,GAAlB,kBAAkB,CAAoB;AACpD,QAAc,YAAO,GAAP,OAAO,CAAS;AAC9B,QAAY,aAAQ,GAAR,QAAQ,CAAU;AAC7B,KAAK;AAEN,IAAE,MAAM,CAAC,EAAW;AAAK,QACrB,IAAI,IAAI,CAAC,SAAS,EAAE;AACvB,YAAK,IAAI,EAAE,EAAE;AACb,gBAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AACjC,aAAM;AAAE,iBAAI;AACZ,gBAAO,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;AAClC,aAAM;AACN,SAAI;AACJ,KAAE;AAEH,IAAY,aAAa;AAAM,QAC3B,OAAO,GAAG,IAAI,CAAC,eAAe,IAAI,aAAa,EAAE,EAAE,CAAC;AACvD,KAAE;AAEH,IAAY,aAAa,CAAmC,IAAsB;AAAK,QACnF,IAAI,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AAC7F,QAAG,IAAI,iBAAiB,EAAE;AAC1B,YAAK,OAAO,iBAAsB,CAAC;AACnC,SAAI;AAEL,QAAI,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;AAC1C,YAAK,WAAW,EAAE,KAAK;AACvB,YAAK,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,EAAE;AACzD,YAAK,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,MAAM,EAAE;AACvD,SAAI,CAAC,CAAC;AACN,QAAG,MAAM,eAAe,GAAG,IAAI,eAAe,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC1E,QAAG,MAAM,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AAC3D,QAAG,MAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC;AACjD,QAAG,WAAW,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;AAEtC,QAAI,IAAI,CAAC,iBAAiB,EAAE;AAC3B,YAAK,IAAI,CAAC,SAAS,GAAG,iBAAiB,GAAG,YAAY,CAAC,QAAQ,CAAC;AAChE,YAAK,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,CAAC,IAAI,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;AAC/F,SAAI;AAEL,QAAI,OAAO,iBAAsB,CAAC;AACjC,KAAE;AACF,CAAA;AAED,MACsB,sBAAsB;AAAI,IAM9C,YAAsB,GAAsB,EAAY,eAAgC;AACzF,QADuB,QAAG,GAAH,GAAG,CAAmB;AAAE,QAAU,oBAAe,GAAf,eAAe,CAAiB;AAAE,QAJ1F,cAAS,GAAmC,EAAE,CAAC;AAEjD,QAAqB,aAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;AAEpD,QACI,IAAI,CAAC,YAAY,EAAE,CAAC;AACvB,KAAE;AAEH,IAAE,QAAQ;AAAM,QACZ,IAAI,CAAC,qBAAqB,EAAE,CAAC;AAChC,KAAE;AAEH,IAAE,WAAW;AAAM,QACf,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AACxB,QAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;AAC5B,KAAE;AAEH,IAAE,MAAM,CAAC,IAAmB;AAAK,QAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAEzC,QAAI,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,MAAO,CAAC,UAAU,EAAE;AACzD,YAAK,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC9C,SAAI;AAEL,QAAI,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AAEnD,QAAI,IAAI,CAAC,cAAc,EAAE,CAAC;AAE1B,QAAI,OAAO,QAAQ,CAAC;AACnB,KAAE;AAEH,IAAE,MAAM,CAAC,EAAU,EAAE,aAAsB,KAAK;AAAK,QACjD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,KAAK;AACvC,YAAK,IAAI,QAAQ,CAAC,SAAS,KAAK,EAAE,EAAE;AACpC,gBAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AACvC,gBAAO,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;AAC5C,gBAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;AAC3C,gBAAO,IAAI,CAAC,cAAc,EAAE,CAAC;AAC7B,gBAAO,OAAO,IAAI,CAAC;AACnB,aAAM;AACN,YAAK,OAAO,KAAK,CAAC;AAClB,SAAI,CAAC,CAAC;AACN,KAAE;AAEH,IAAE,SAAS;AAAM,QACb,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;AACxD,QAAG,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AAExB,QAAI,IAAI,CAAC,cAAc,EAAE,CAAC;AACzB,KAAE;AAEH,IAAY,QAAQ,CAAC,QAAuB;AAAK,QAC7C,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AAC1D,QAAG,QAAQ,CAAC,OAAO,GAAG,IAAI,OAAO,EAAW,CAAC;AAC7C,QAAG,OAAO,QAAmC,CAAC;AAC9C,KAAE;AAEH,IAAY,QAAQ,CAAC,QAAiC,EAAE,UAAmB;AAAK,QAC5E,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACrC,QAAG,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;AAC/B,KAAE;AAEH,IAAY,cAAc;AAAM,QAC5B,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;AAC5B,KAAE;AAEH,IAIY,YAAY,CAAC,OAA8B;AAAK,QACxD,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,MAAO,CAAC;AAClE,QAAG,uBAAS,UAAU,EAAE,SAAS,EAAE,cAAc,IAAK,OAAO,EAAG;AAChE,KAAE;AACF;oDA7EA,SAAS;uGACP;AAAE;AAAiD,YA7D7C,iBAAiB;AAAK,YAIP,eAAe;AAAI;;;oHAAE;AAAE,MAwIzB,aAAa;AAAI,IAerC,YAAgC,GAAsB;AACxD,QADkC,QAAG,GAAH,GAAG,CAAmB;AAAE,QAX/C,cAAS,GAAG,IAAI,YAAY,EAAuC,CAAC;AAC9E,QAAU,0BAAqB,GAA4B,IAAI,OAAO,EAAkB,CAAC;AAE1F,QAGY,eAAU,GAAY,KAAK,CAAC;AACvC,QAAW,eAAU,GAAkB,IAAI,CAAC;AAC5C,KAG2D;AAE5D,IAAE,QAAQ;AAAM,QACZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAyC,CAAC;AAE3E,QAAI,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;AAC/B,YAAK,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,OAAO,CAAC;AACnC,YAAK,IAAI,CAAC,qBAAqB;AAC/B,iBAAQ,IAAI,CACH,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,SAAS,KAAK,MAAM,IAAI,KAAK,CAAC,OAAO,KAAK,OAAO,CAAC,EACxE,IAAI,CAAC,CAAC,CAAC,CACR;AACR,iBAAQ,SAAS,CAAC;AAClB,gBAAS,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACvC,gBAAS,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;AAC3F,aAAQ,CAAC,CAAC;AACV,SAAI;AAEL,QAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;AAEjD,QAAI,IAAI,IAAI,CAAC,SAAS,EAAE;AACvB,YAAK,IAAI,CAAC,SAAS,EAAE,CAAC;AACtB,YAAK,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC9B,SAAI;AACJ,KAAE;AAEH,IAAE,WAAW;AAAM,QACf,IAAI,IAAI,CAAC,SAAS,EAAE;AACvB,YAAK,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC9B,SAAI;AACJ,QAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,CAAC;AACzC,KAAE;AAEH,IAAE,OAAO;AAAM,QACX,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;AACtD,YAAK,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC9B,YAAK,IAAI,CAAC,SAAS,EAAE,CAAC;AACtB,SAAI;AACJ,KAAE;AAEH,IAAE,OAAO;AAAM,QACX,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;AACtD,YAAK,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC9B,SAAI;AACJ,KAAE;AAEH,IAAY,OAAO,CAAC,aAAsB,KAAK;AAAK,QAChD,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAChC,QAAG,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;AAC/B,YAAK,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,OAAO,CAAC;AACnC,YAAK,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;AAC9B,YAAK,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAClC,gBAAO,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;AACnC,gBAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC;AACxE,aAAM,EAAE,GAAG,CAAC,CAAC;AACb,SAAI;AAAE,aAAI;AACV,YAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC;AACtE,SAAI;AACJ,KAAE;AAEH,IAAU,SAAS;AAAM,QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;AAC3C,QAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACtC,KAAE;AAEH,IAAU,SAAS;AAAM,QACrB,IAAI,IAAI,CAAC,SAAS,EAAE;AACvB,YAAK,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,gBAAiB,CAAC;AAC1D,SAAI;AACJ,KAAE;AAEH,IAAU,iBAAiB;AAAM,QAC7B,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE;AAC1B,YAAK,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC9B,YAAK,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,MAAM,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AACvE,YAAK,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACxC,SAAI;AAAE,aAAI;AACV,YAAK,IAAI,CAAC,OAAO,EAAE,CAAC;AACpB,SAAI;AACJ,KAAE;AAEH,IAAU,iBAAiB;AAAM,QAC7B,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,EAAE;AACjC,YAAK,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACnC,YAAK,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AAC5B,SAAI;AACJ,KAAE;AACF;2CAvGA,SAAS;qFACP;AAAE;AAAwC,YA5IpC,iBAAiB;AAAI;;;kFAAE;AAAE;ACRlC;AACC;AACC;AACC;AAaH,MAAM,wBAAwB,GAAG,SAAS,CAAC;AAE3C,MAAM,yBAAyB,GAA4B;AAC1D,IAAC,SAAS,EAAE,IAAI;AAChB,IAAC,UAAU,EAAE,IAAI;AACjB,IAAC,UAAU,EAAE,CAAC;AACd,IAAC,cAAc,EAAE,IAAI;AACrB,IAAC,KAAK,EAAE,EAAE;AACV,IAAC,WAAW,EAAE,KAAK;AACnB,CAAA,CAAC;AAEF,MAgBa,2BAA4B,SAAQ,sBAAsB;AACtE,IAKC,YAAY,GAAsB,EAAE,eAAgC;AACrE,QAAG,KAAK,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC;AAC/B,QAPU,aAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;AACzC,QAAC,QAAG,GAAc,KAAK,CAAC;AACxB,QAAC,cAAS,GAAmC,EAAE,CAAC;AAChD,QAIG,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,wBAAwB,CAAC,CAAC;AACvF,QAAG,IAAI,CAAC,GAAG,GAAG,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,WAAW,KAAI,KAAK,CAAC;AAC3C,KAAE;AAEH,IAAY,qBAAqB;AAAM,QACnC,IAAI,CAAC,eAAe;AACvB,aAAM,gCAAgC,CAAC,wBAAwB,CAAC;AAChE,aAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACpC,aAAM,SAAS,CAAC;AAChB,YAAO,IAAI,CAAC,YAAY,EAAE,CAAC;AAC3B,YAAO,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,wBAAwB,CAAC,CAAC;AAC3F,YAAO,IAAI,MAAM,EAAE;AACnB,gBAAS,MAAM,EAAE,WAAW,EAAE,GAAG,MAAM,CAAC;AACxC,gBAAS,IAAI,CAAC,GAAG,GAAG,WAAW,IAAI,IAAI,CAAC,GAAG,CAAC;AAC5C,aAAQ;AACR,SAAM,CAAC,CAAC;AACR,KAAE;AAEH,IAAY,YAAY;AAAM,QAC1B,IAAI,CAAC,MAAM,iDACN,yBAAyB,GACzB,IAAI,CAAC,MAAM,GACX,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,wBAAwB,CAAC,CACxE,CAAC;AAEN,QAAI,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC5C,QAAG,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;AAC3B,KAAE;AACF;yDApDA,SAAS,SAAC,mBACT,eAAe,EAAE,uBAAuB,CAAC,MAAM,mBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI,mBACrC,QAAQ,EAAE;WAAsB,mBAChC,QAAQ,EAAE,oBAAoB,mBAC9B,mBAAmB,EAAE,KAAK,mBAC1B,QAAQ,EAAE,2RAQT,eACF;;;;;;;;;2HACK;AAAE;AAAsD,YArC5B,iBAAiB;AAAK,YAIhC,eAAe;AAAI;;;;;;;;;;;;;;;;;;;oHAAE;AAAE;ACV/C;AACC;AACC;AACC;AAEA,MAGU,sBAAsB;AACnC;oDAFC,QAAQ;;;;;0BACN;AAAE;ACRL;AACC;AACC;AACC;AAEA,MAaU,gBAAiB,SAAQ,WAAW;AAChD,IAGC,YAAY,kBAAsC,EAAE,OAAgB,EAAE,QAAkB;AACzF,QAAG,KAAK,CAAC,kBAAkB,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;AAChD,QAJW,oBAAe,GAAG,UAAU,CAAC;AAEzC,KAEG;AAEH,IAAE,OAAO,CAAC,OAAmC,EAAE,OAA8B;AAAK,QAC9E,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;AACrE,KAAE;AAEH,IAAE,KAAK,CAAC,OAAmC,EAAE,OAA8B;AAAK,QAC5E,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;AACnE,KAAE;AAEH,IAAE,IAAI,CAAC,OAAmC,EAAE,OAA8B;AAAK,QAC3E,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;AAClE,KAAE;AAEH,IAAE,OAAO,CAAC,OAAmC,EAAE,OAA8B;AAAK,QAC9E,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;AACrE,KAAE;AAEH,IAAE,OAAO,CAAC,OAAmC,EAAE,OAA8B;AAAK,QAC9E,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;AACrE,KAAE;AAEH,IAAE,MAAM,CACJ,IAAmE,EACnE,OAAmC,EACnC,OAA8B;AAC9B,QACA,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;AAC1D,KAAE;AAEH,IAAU,cAAc,CAAC,OAAsB,EAAE,OAA8B;AAAK,QAChF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,2BAA2B,CAAC,CAAC;AAErE,QAAI,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,iCACvB,OAAO,GACP;AACR,YAAO,SAAS,EAAE,IAAI,IAAI,EAAE;AAC5B,YAAO,SAAS,EAAE,IAAI,CAAC,aAAa,EAAE;AACtC,YAAO,OAAO;AACd,SAAM,EACD,CAAC;AACN,KAAE;AACF;oNACD;AAAE,sRAjDI;AAAE;EAHP,UAAU,SAAC,rBAGuC,YAV1C,kBAAkB;KAQzB,UAAU,EAAE,jBARkB,YAHvB,OAAO;eAWoB,fAXf,YACA,QAAQ;AAAI;GAWhC;;;;;wIAXkC;AAAE;ACNrC;AACC;AACC;AACC;AAEA,MAiDU,kBAAmB,SAAQ,aAAa;AAAI,IAIvD,YAAY,GAAsB;AACnC,QAAG,KAAK,CAAC,GAAG,CAAC,CAAC;AACd,QAJoB,cAAS,GAAG,IAAI,YAAY,EAAuC,CAAC;AAEzF,KAEG;AACF;gDAvCA,SAAS,SAAC,mBACT,eAAe,EAAE,uBAAuB,CAAC,MAAM,mBAC/C;IAAa,EAAE,iBAAiB,CAAC,IAAI,mBACrC,QAAQ,EAAE,YAAY,mBACtB,QAAQ,EAAE,WAAW,mBACrB,mBAAmB,EAAE,KAAK,mBAC1B,UAAU,EAAE,CAAC,YAAY,CAAC,mBAC1B,QAAQ,EAAE;;2GAuBT,eACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0NACK;AAAE;AAA6C,YA/CnD,iBAAiB;AACjB;AAAI;AAGC,uBA4CJ,KAAK;AAAM,wBACX,MAAM;AAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAE;ACxDlB;AACC;AACC;AACC;AAEA,MAiBU,eAAe;AAC5B;6CANC,QAAQ,SAAC,mBACR,OAAO,EAAE,CAAC;AAAU,EAAE,YAAY,EAAE,aAAa,EAAE,YAAY,EAAE,cAAc,EAAE,sBAAsB,CAAC;cACxG,YAAY,EAAE,CAAC,2BAA2B,EAAE,kBAAkB,CAAC,mBAC/D,eAAe,EAAE,CAAC,2BAA2B,CAAC,eAC/C;;;;;;;;;kVACK;AAAE;ACtBR;AACC;AACC;AACC;AAEA;ACLH;AACC;AACC;AACC;AAEA;ACLH;AACC;AACC;AAEA;AAAE;AAC8I","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { AnimationEvent } from '@angular/animations';\nimport { ComponentType, Overlay } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ChangeDetectorRef, Directive, EventEmitter, Injector, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { MessageConfig, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { NzSingletonService } from 'ng-zorro-antd/core/services';\n\nimport { NzMessageData, NzMessageDataOptions } from './typings';\n\nlet globalCounter = 0;\n\nexport abstract class NzMNService {\n  protected abstract componentPrefix: string;\n  protected container?: NzMNContainerComponent;\n\n  constructor(\n    protected nzSingletonService: NzSingletonService,\n    protected overlay: Overlay,\n    private injector: Injector\n  ) {}\n\n  remove(id?: string): void {\n    if (this.container) {\n      if (id) {\n        this.container.remove(id);\n      } else {\n        this.container.removeAll();\n      }\n    }\n  }\n\n  protected getInstanceId(): string {\n    return `${this.componentPrefix}-${globalCounter++}`;\n  }\n\n  protected withContainer<T extends NzMNContainerComponent>(ctor: ComponentType<T>): T {\n    let containerInstance = this.nzSingletonService.getSingletonWithKey(this.componentPrefix);\n    if (containerInstance) {\n      return containerInstance as T;\n    }\n\n    const overlayRef = this.overlay.create({\n      hasBackdrop: false,\n      scrollStrategy: this.overlay.scrollStrategies.noop(),\n      positionStrategy: this.overlay.position().global()\n    });\n    const componentPortal = new ComponentPortal(ctor, null, this.injector);\n    const componentRef = overlayRef.attach(componentPortal);\n    const overlayPane = overlayRef.overlayElement;\n    overlayPane.style.zIndex = '1010';\n\n    if (!containerInstance) {\n      this.container = containerInstance = componentRef.instance;\n      this.nzSingletonService.registerSingletonWithKey(this.componentPrefix, containerInstance);\n    }\n\n    return containerInstance as T;\n  }\n}\n\n@Directive()\nexport abstract class NzMNContainerComponent implements OnInit, OnDestroy {\n  config?: Required<MessageConfig>;\n  instances: Array<Required<NzMessageData>> = [];\n\n  protected readonly destroy$ = new Subject<void>();\n\n  constructor(protected cdr: ChangeDetectorRef, protected nzConfigService: NzConfigService) {\n    this.updateConfig();\n  }\n\n  ngOnInit(): void {\n    this.subscribeConfigChange();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  create(data: NzMessageData): Required<NzMessageData> {\n    const instance = this.onCreate(data);\n\n    if (this.instances.length >= this.config!.nzMaxStack) {\n      this.instances = this.instances.slice(1);\n    }\n\n    this.instances = [...this.instances, instance];\n\n    this.readyInstances();\n\n    return instance;\n  }\n\n  remove(id: string, userAction: boolean = false): void {\n    this.instances.some((instance, index) => {\n      if (instance.messageId === id) {\n        this.instances.splice(index, 1);\n        this.instances = [...this.instances];\n        this.onRemove(instance, userAction);\n        this.readyInstances();\n        return true;\n      }\n      return false;\n    });\n  }\n\n  removeAll(): void {\n    this.instances.forEach(i => this.onRemove(i, false));\n    this.instances = [];\n\n    this.readyInstances();\n  }\n\n  protected onCreate(instance: NzMessageData): Required<NzMessageData> {\n    instance.options = this.mergeOptions(instance.options);\n    instance.onClose = new Subject<boolean>();\n    return instance as Required<NzMessageData>;\n  }\n\n  protected onRemove(instance: Required<NzMessageData>, userAction: boolean): void {\n    instance.onClose.next(userAction);\n    instance.onClose.complete();\n  }\n\n  protected readyInstances(): void {\n    this.cdr.detectChanges();\n  }\n\n  protected abstract updateConfig(): void;\n\n  protected abstract subscribeConfigChange(): void;\n\n  protected mergeOptions(options?: NzMessageDataOptions): NzMessageDataOptions {\n    const { nzDuration, nzAnimate, nzPauseOnHover } = this.config!;\n    return { nzDuration, nzAnimate, nzPauseOnHover, ...options };\n  }\n}\n\n@Directive()\nexport abstract class NzMNComponent implements OnInit, OnDestroy {\n  instance!: Required<NzMessageData>;\n  index?: number;\n\n  readonly destroyed = new EventEmitter<{ id: string; userAction: boolean }>();\n  readonly animationStateChanged: Subject<AnimationEvent> = new Subject<AnimationEvent>();\n\n  protected options!: Required<NzMessageDataOptions>;\n  protected autoClose?: boolean;\n  protected closeTimer?: number;\n  protected userAction: boolean = false;\n  protected eraseTimer: number | null = null;\n  protected eraseTimingStart?: number;\n  protected eraseTTL!: number;\n\n  protected constructor(protected cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.options = this.instance.options as Required<NzMessageDataOptions>;\n\n    if (this.options.nzAnimate) {\n      this.instance.state = 'enter';\n      this.animationStateChanged\n        .pipe(\n          filter(event => event.phaseName === 'done' && event.toState === 'leave'),\n          take(1)\n        )\n        .subscribe(() => {\n          clearTimeout(this.closeTimer);\n          this.destroyed.next({ id: this.instance.messageId, userAction: this.userAction });\n        });\n    }\n\n    this.autoClose = this.options.nzDuration > 0;\n\n    if (this.autoClose) {\n      this.initErase();\n      this.startEraseTimeout();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.autoClose) {\n      this.clearEraseTimeout();\n    }\n    this.animationStateChanged.complete();\n  }\n\n  onEnter(): void {\n    if (this.autoClose && this.options.nzPauseOnHover) {\n      this.clearEraseTimeout();\n      this.updateTTL();\n    }\n  }\n\n  onLeave(): void {\n    if (this.autoClose && this.options.nzPauseOnHover) {\n      this.startEraseTimeout();\n    }\n  }\n\n  protected destroy(userAction: boolean = false): void {\n    this.userAction = userAction;\n    if (this.options.nzAnimate) {\n      this.instance.state = 'leave';\n      this.cdr.detectChanges();\n      this.closeTimer = setTimeout(() => {\n        this.closeTimer = undefined;\n        this.destroyed.next({ id: this.instance.messageId, userAction });\n      }, 200);\n    } else {\n      this.destroyed.next({ id: this.instance.messageId, userAction });\n    }\n  }\n\n  private initErase(): void {\n    this.eraseTTL = this.options.nzDuration;\n    this.eraseTimingStart = Date.now();\n  }\n\n  private updateTTL(): void {\n    if (this.autoClose) {\n      this.eraseTTL -= Date.now() - this.eraseTimingStart!;\n    }\n  }\n\n  private startEraseTimeout(): void {\n    if (this.eraseTTL > 0) {\n      this.clearEraseTimeout();\n      this.eraseTimer = setTimeout(() => this.destroy(), this.eraseTTL);\n      this.eraseTimingStart = Date.now();\n    } else {\n      this.destroy();\n    }\n  }\n\n  private clearEraseTimeout(): void {\n    if (this.eraseTimer !== null) {\n      clearTimeout(this.eraseTimer);\n      this.eraseTimer = null;\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Direction } from '@angular/cdk/bidi';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { MessageConfig, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { toCssPixel } from 'ng-zorro-antd/core/util';\n\nimport { NzMNContainerComponent } from './base';\nimport { NzMessageData } from './typings';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'message';\n\nconst NZ_MESSAGE_DEFAULT_CONFIG: Required<MessageConfig> = {\n  nzAnimate: true,\n  nzDuration: 3000,\n  nzMaxStack: 7,\n  nzPauseOnHover: true,\n  nzTop: 24,\n  nzDirection: 'ltr'\n};\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-message-container',\n  exportAs: 'nzMessageContainer',\n  preserveWhitespaces: false,\n  template: `\n    <div class=\"ant-message\" [class.ant-message-rtl]=\"dir === 'rtl'\" [style.top]=\"top\">\n      <nz-message\n        *ngFor=\"let instance of instances\"\n        [instance]=\"instance\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-message>\n    </div>\n  `\n})\nexport class NzMessageContainerComponent extends NzMNContainerComponent {\n  readonly destroy$ = new Subject<void>();\n  dir: Direction = 'ltr';\n  instances: Array<Required<NzMessageData>> = [];\n  top?: string | null;\n\n  constructor(cdr: ChangeDetectorRef, nzConfigService: NzConfigService) {\n    super(cdr, nzConfigService);\n    const config = this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME);\n    this.dir = config?.nzDirection || 'ltr';\n  }\n\n  protected subscribeConfigChange(): void {\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.updateConfig();\n        const config = this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME);\n        if (config) {\n          const { nzDirection } = config;\n          this.dir = nzDirection || this.dir;\n        }\n      });\n  }\n\n  protected updateConfig(): void {\n    this.config = {\n      ...NZ_MESSAGE_DEFAULT_CONFIG,\n      ...this.config,\n      ...this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME)\n    };\n\n    this.top = toCssPixel(this.config.nzTop);\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\n\n@NgModule()\nexport class NzMessageServiceModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Overlay } from '@angular/cdk/overlay';\nimport { Injectable, Injector, TemplateRef } from '@angular/core';\n\nimport { NzSingletonService } from 'ng-zorro-antd/core/services';\n\nimport { NzMNService } from './base';\nimport { NzMessageContainerComponent } from './message-container.component';\nimport { NzMessageServiceModule } from './message.service.module';\nimport { NzMessageData, NzMessageDataOptions, NzMessageRef } from './typings';\n\n@Injectable({\n  providedIn: NzMessageServiceModule\n})\nexport class NzMessageService extends NzMNService {\n  protected container?: NzMessageContainerComponent;\n  protected componentPrefix = 'message-';\n\n  constructor(nzSingletonService: NzSingletonService, overlay: Overlay, injector: Injector) {\n    super(nzSingletonService, overlay, injector);\n  }\n\n  success(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'success', content }, options);\n  }\n\n  error(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'error', content }, options);\n  }\n\n  info(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'info', content }, options);\n  }\n\n  warning(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'warning', content }, options);\n  }\n\n  loading(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'loading', content }, options);\n  }\n\n  create(\n    type: 'success' | 'info' | 'warning' | 'error' | 'loading' | string,\n    content: string | TemplateRef<void>,\n    options?: NzMessageDataOptions\n  ): NzMessageRef {\n    return this.createInstance({ type, content }, options);\n  }\n\n  private createInstance(message: NzMessageData, options?: NzMessageDataOptions): NzMessageRef {\n    this.container = this.withContainer(NzMessageContainerComponent);\n\n    return this.container.create({\n      ...message,\n      ...{\n        createdAt: new Date(),\n        messageId: this.getInstanceId(),\n        options\n      }\n    });\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { moveUpMotion } from 'ng-zorro-antd/core/animation';\n\nimport { NzMNComponent } from './base';\nimport { NzMessageData } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-message',\n  exportAs: 'nzMessage',\n  preserveWhitespaces: false,\n  animations: [moveUpMotion],\n  template: `\n    <div\n      class=\"ant-message-notice\"\n      [@moveUpMotion]=\"instance.state\"\n      (@moveUpMotion.done)=\"animationStateChanged.next($event)\"\n      (mouseenter)=\"onEnter()\"\n      (mouseleave)=\"onLeave()\"\n    >\n      <div class=\"ant-message-notice-content\">\n        <div class=\"ant-message-custom-content\" [ngClass]=\"'ant-message-' + instance.type\">\n          <ng-container [ngSwitch]=\"instance.type\">\n            <i *ngSwitchCase=\"'success'\" nz-icon nzType=\"check-circle\"></i>\n            <i *ngSwitchCase=\"'info'\" nz-icon nzType=\"info-circle\"></i>\n            <i *ngSwitchCase=\"'warning'\" nz-icon nzType=\"exclamation-circle\"></i>\n            <i *ngSwitchCase=\"'error'\" nz-icon nzType=\"close-circle\"></i>\n            <i *ngSwitchCase=\"'loading'\" nz-icon nzType=\"loading\"></i>\n          </ng-container>\n          <ng-container *nzStringTemplateOutlet=\"instance.content\">\n            <span [innerHTML]=\"instance.content\"></span>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class NzMessageComponent extends NzMNComponent implements OnInit, OnDestroy {\n  @Input() instance!: Required<NzMessageData>;\n  @Output() readonly destroyed = new EventEmitter<{ id: string; userAction: boolean }>();\n\n  constructor(cdr: ChangeDetectorRef) {\n    super(cdr);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzMessageContainerComponent } from './message-container.component';\nimport { NzMessageComponent } from './message.component';\nimport { NzMessageServiceModule } from './message.service.module';\n\n@NgModule({\n  imports: [BidiModule, CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzMessageServiceModule],\n  declarations: [NzMessageContainerComponent, NzMessageComponent],\n  entryComponents: [NzMessageContainerComponent]\n})\nexport class NzMessageModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { TemplateRef } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport type NzMessageType = 'success' | 'info' | 'warning' | 'error' | 'loading';\n\nexport interface NzMessageDataOptions {\n  nzDuration?: number;\n  nzAnimate?: boolean;\n  nzPauseOnHover?: boolean;\n}\n\nexport interface NzMessageData {\n  type?: NzMessageType | string;\n  content?: string | TemplateRef<void>;\n  messageId?: string;\n  createdAt?: Date;\n  options?: NzMessageDataOptions;\n  state?: 'enter' | 'leave';\n\n  onClose?: Subject<boolean>;\n}\n\nexport type NzMessageRef = Pick<Required<NzMessageData>, 'onClose' | 'messageId'>;\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './base';\nexport * from './message.service';\nexport * from './message.service.module';\nexport * from './message.module';\nexport * from './message.component';\nexport * from './typings';\nexport * from './message-container.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}