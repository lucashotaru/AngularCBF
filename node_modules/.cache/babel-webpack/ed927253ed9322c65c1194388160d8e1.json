{"ast":null,"code":"import { __decorate } from 'tslib';\nimport { ConnectionPositionPair, CdkConnectedOverlay } from '@angular/cdk/overlay';\nimport { Directive, Input, NgModule } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/overlay';\nimport * as ɵngcc2 from 'ng-zorro-antd/core/services';\nconst POSITION_MAP = {\n  top: new ConnectionPositionPair({\n    originX: 'center',\n    originY: 'top'\n  }, {\n    overlayX: 'center',\n    overlayY: 'bottom'\n  }),\n  topCenter: new ConnectionPositionPair({\n    originX: 'center',\n    originY: 'top'\n  }, {\n    overlayX: 'center',\n    overlayY: 'bottom'\n  }),\n  topLeft: new ConnectionPositionPair({\n    originX: 'start',\n    originY: 'top'\n  }, {\n    overlayX: 'start',\n    overlayY: 'bottom'\n  }),\n  topRight: new ConnectionPositionPair({\n    originX: 'end',\n    originY: 'top'\n  }, {\n    overlayX: 'end',\n    overlayY: 'bottom'\n  }),\n  right: new ConnectionPositionPair({\n    originX: 'end',\n    originY: 'center'\n  }, {\n    overlayX: 'start',\n    overlayY: 'center'\n  }),\n  rightTop: new ConnectionPositionPair({\n    originX: 'end',\n    originY: 'top'\n  }, {\n    overlayX: 'start',\n    overlayY: 'top'\n  }),\n  rightBottom: new ConnectionPositionPair({\n    originX: 'end',\n    originY: 'bottom'\n  }, {\n    overlayX: 'start',\n    overlayY: 'bottom'\n  }),\n  bottom: new ConnectionPositionPair({\n    originX: 'center',\n    originY: 'bottom'\n  }, {\n    overlayX: 'center',\n    overlayY: 'top'\n  }),\n  bottomCenter: new ConnectionPositionPair({\n    originX: 'center',\n    originY: 'bottom'\n  }, {\n    overlayX: 'center',\n    overlayY: 'top'\n  }),\n  bottomLeft: new ConnectionPositionPair({\n    originX: 'start',\n    originY: 'bottom'\n  }, {\n    overlayX: 'start',\n    overlayY: 'top'\n  }),\n  bottomRight: new ConnectionPositionPair({\n    originX: 'end',\n    originY: 'bottom'\n  }, {\n    overlayX: 'end',\n    overlayY: 'top'\n  }),\n  left: new ConnectionPositionPair({\n    originX: 'start',\n    originY: 'center'\n  }, {\n    overlayX: 'end',\n    overlayY: 'center'\n  }),\n  leftTop: new ConnectionPositionPair({\n    originX: 'start',\n    originY: 'top'\n  }, {\n    overlayX: 'end',\n    overlayY: 'top'\n  }),\n  leftBottom: new ConnectionPositionPair({\n    originX: 'start',\n    originY: 'bottom'\n  }, {\n    overlayX: 'end',\n    overlayY: 'bottom'\n  })\n};\nconst DEFAULT_TOOLTIP_POSITIONS = [POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left];\nconst DEFAULT_CASCADER_POSITIONS = [POSITION_MAP.bottomLeft, POSITION_MAP.bottomRight, POSITION_MAP.topLeft, POSITION_MAP.topRight];\nconst DEFAULT_MENTION_TOP_POSITIONS = [new ConnectionPositionPair({\n  originX: 'start',\n  originY: 'bottom'\n}, {\n  overlayX: 'start',\n  overlayY: 'bottom'\n}), new ConnectionPositionPair({\n  originX: 'start',\n  originY: 'bottom'\n}, {\n  overlayX: 'end',\n  overlayY: 'bottom'\n})];\nconst DEFAULT_MENTION_BOTTOM_POSITIONS = [POSITION_MAP.bottomLeft, new ConnectionPositionPair({\n  originX: 'start',\n  originY: 'bottom'\n}, {\n  overlayX: 'end',\n  overlayY: 'top'\n})];\n\nfunction getPlacementName(position) {\n  for (const placement in POSITION_MAP) {\n    if (position.connectionPair.originX === POSITION_MAP[placement].originX && position.connectionPair.originY === POSITION_MAP[placement].originY && position.connectionPair.overlayX === POSITION_MAP[placement].overlayX && position.connectionPair.overlayY === POSITION_MAP[placement].overlayY) {\n      return placement;\n    }\n  }\n\n  return undefined;\n}\n/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\n\n\nlet NzConnectedOverlayDirective = /*#__PURE__*/(() => {\n  class NzConnectedOverlayDirective {\n    constructor(cdkConnectedOverlay, nzDestroyService) {\n      this.cdkConnectedOverlay = cdkConnectedOverlay;\n      this.nzDestroyService = nzDestroyService;\n      this.nzArrowPointAtCenter = false;\n      this.cdkConnectedOverlay.backdropClass = 'nz-overlay-transparent-backdrop';\n      this.cdkConnectedOverlay.positionChange.pipe(takeUntil(this.nzDestroyService)).subscribe(position => {\n        if (this.nzArrowPointAtCenter) {\n          this.updateArrowPosition(position);\n        }\n      });\n    }\n\n    updateArrowPosition(position) {\n      const originEl = this.cdkConnectedOverlay.origin.elementRef.nativeElement;\n      const originRect = originEl.getBoundingClientRect();\n      const placement = getPlacementName(position);\n      let offsetX = 0;\n      let offsetY = 0;\n\n      if (placement === 'topLeft' || placement === 'bottomLeft') {\n        offsetX = originRect.width / 2 - 14;\n      } else if (placement === 'topRight' || placement === 'bottomRight') {\n        offsetX = -(originRect.width / 2 - 14);\n      } else if (placement === 'leftTop' || placement === 'rightTop') {\n        offsetY = originRect.height / 2 - 10;\n      } else if (placement === 'leftBottom' || placement === 'rightBottom') {\n        offsetY = -(originRect.height / 2 - 10);\n      }\n\n      if (this.cdkConnectedOverlay.offsetX !== offsetX || this.cdkConnectedOverlay.offsetY !== offsetY) {\n        this.cdkConnectedOverlay.offsetY = offsetY;\n        this.cdkConnectedOverlay.offsetX = offsetX;\n        this.cdkConnectedOverlay.overlayRef.updatePosition();\n      }\n    }\n\n  }\n\n  NzConnectedOverlayDirective.ɵfac = function NzConnectedOverlayDirective_Factory(t) {\n    return new (t || NzConnectedOverlayDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkConnectedOverlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NzDestroyService));\n  };\n\n  NzConnectedOverlayDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NzConnectedOverlayDirective,\n    selectors: [[\"\", \"cdkConnectedOverlay\", \"\", \"nzConnectedOverlay\", \"\"]],\n    inputs: {\n      nzArrowPointAtCenter: \"nzArrowPointAtCenter\"\n    },\n    exportAs: [\"nzConnectedOverlay\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([NzDestroyService])]\n  });\n\n  __decorate([InputBoolean()], NzConnectedOverlayDirective.prototype, \"nzArrowPointAtCenter\", void 0);\n\n  return NzConnectedOverlayDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\n\n\nlet NzOverlayModule = /*#__PURE__*/(() => {\n  class NzOverlayModule {}\n\n  NzOverlayModule.ɵfac = function NzOverlayModule_Factory(t) {\n    return new (t || NzOverlayModule)();\n  };\n\n  NzOverlayModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NzOverlayModule\n  });\n  NzOverlayModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return NzOverlayModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzOverlayModule, {\n    declarations: [NzConnectedOverlayDirective],\n    exports: [NzConnectedOverlayDirective]\n  });\n})();\n/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { DEFAULT_CASCADER_POSITIONS, DEFAULT_MENTION_BOTTOM_POSITIONS, DEFAULT_MENTION_TOP_POSITIONS, DEFAULT_TOOLTIP_POSITIONS, NzConnectedOverlayDirective, NzOverlayModule, POSITION_MAP, getPlacementName }; //# sourceMappingURL=ng-zorro-antd-core-overlay.js.map","map":null,"metadata":{},"sourceType":"module"}